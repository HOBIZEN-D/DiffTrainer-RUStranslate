lang_code: "English (US)"
app_ttl: "ДиффТрейнер"
tab_ttl_1: "ИНФО"
tab_ttl_2: "Подготовка данных"
tab_ttl_3: "Конфигурация"
tab_ttl_4: "Подготовка&Трейнинг"
tab_ttl_5: "Экспорт"
tab_ttl_6: "Экспорт(расширенный)"

# About tab
vers: "версия"
install: "Полная установка"
install2: "Устанвливает Диффсингер, Ута-конветер, SOME и все зависимости питона.\n Повторный запуск вызовет удаление и перезапись файлов."
changelog: "Список изменений"
update: "Обновить средства"
update2: "Устанвливает Диффсингер, Ута-конветер, SOME, но без зависимостей питона.\n Повторный запуск вызовет удаление и перезапись файлов."
cred_front: "Фронт энд:"
cred_back: "Бек энд:"
restart: "закоройте GUI"
#note: string should not be longer than this or it will be cut off

#Data Prep tab
silperseg: "Максимальное количество тишины на сегмент."
silperseg2: "Показывает, сколько фонем AP/SP может быть в одном сегменте.\nНовая тишина активирует новый сегмент."
length_sil: "Маскимум длины тишины(в секундах)"
length_sil2: "Насколько длинной может быть тишина.\nБолее длинные образцы тишины будут разделены.\nНе точное значение, при необходимости может быть тише или длиннее."
length_seg: "Максимум длины сегмента(в секундах)"
length_seg2: "Насколько длинным можнт быть один сегмент.Более длинные сегмнты будут разделены.\nНе точное значение, при необходимости может быть больше или меньше.\nРекомендованное значение-5, но если очень слбый процеесор-потянет 1-4. Значение 1 не рекомендуется."
estmidi: "Детекция MIDI:"
estmidiA: "Метод по-умолчанию"
estmidiA2: "Использует Parselmouth для детекции. Качество ниже, но затрачивает меньше мощьности"
estmidiB: "SOME"
estmidiB2: "Использует SOME для детекции. Качество гораздо выше, но на слабом процессоре может лагать."
estmidiC: "Без модели питча"
estmidi2: "Расчитывает питч для каждой фонемы. Необходимо для создания модели питча"
estmidi2A: "Качество ниже, но затрачивает меньше мощьности."
estmidi2B: "Качество гораздо выше, но на слабом процессоре может лагать."
detbre: "Детекция дыхания"
detbre2: "Пытается подсчитать количество фонем вдоха за сегмент. Непредсказуемые результаты."
rawdata: "Выберите папку с входными данными"
rawdata2: "Должно быть внутри папки raw_data. Одна папка для всей модели, \nс подпапками для каждого спикера(оттенка), содержащими файлы .wav и .lab."
prepdata: ":одготовка данных"
prepdata2: "Переведёт данные в формат Диффсингера."

#Config tab
type: "Tип:"
aco: "Акустическая"
var: "Дисперсионная"
adv: "Кастомная конфигурация(для продвинутых)"
adv2: "Unlocks options to individually select parameters. \nOnly recommended for experienced users."
datafolder: "Select formatted data folder"
datafolder2: "Select a folder that has been processed on the previous tab. \nCan be located anywhere, but a subfolder of /diffsinger/data is recommended."
savefolder: "Select checkpoint save folder"
savefolder2: "Select where your checkpoints will be saved. Must be a subfolder of /diffsinger/checkpoints."
confsel: "Select configuration:"
confsel2: "Select from this list of preset configurations.\n All options have been tested."
advconfig: "Advanced configuration:"
advconfig2: "Select individual options for the configuration.\n Non-functional combinations are possible."

vr: "Enable VR preprocessing"
vr2: "Can produce more accurate variance results, but requires high processing power. \n Only recommended for GPU users."

speaker: "Speaker"
spk_lang: "Language"
spk_lang2: "The primary language of the speaker."
other: "Other language"
spk_id: "Parent"
spk_id2: "All speakers with the same number will export as a single, merged speaker.\nRecommended for multiple languages from the same voice."
saveint: "Save interval:"
saveint2: "The checkpoint will save every f'{saveint}' steps."
maxbatch: "Max batch size"
maxbatch2: "How many files the training will process at once.\nRecommended values vary heavily by system, but try starting with 9 for acoustic and 24 for variance.\nThis value can be changed without reprocessing the binaries."
saveconf: "Save configuration"

#Train tab
step1: "Select configuration"
step1-2: "Select a configuration that has been set up for the correct dataset."
step2: "Select checkpoint folder"
step2-2: "Select the folder where checkpoints will be saved.\nThis should match the one in the configuration."
step3a: "Preprocess data"
step3a2: "Prepares binarized data for the training process.\nRun this once per configuration."
step3b: "Train"
warning1: "This window will not respond during training."
warning2: "To stop training, press Ctrl+C in the command line window."
patchlabel: "Optional patch:"
patchbutton: "Use Tensor cores"
patchtip: "For more recent Nvidia GPUs.\nIf you get a message about using tensor cores at the beginning of training, this patch may improve performance slightly."

#Export tab
##strings 'aco', 'var', and 'step2' are reused
acotip: "Exports an acoustic checkpoint to ONNX."
vartip: "Exports a variance checkpoint to ONNX."
step2-2alt: "Select the folder where checkpoints have been saved.\nThe most recent checkpoint in the folder will be used."
onnx: "Export ONNX"
oupatch: "Temporary patch button(run once after setup/update)"
namebox: "Enter the name of your singer with no spaces or special characters."
getaco: "Select acoustic checkpoint folder"
getaco2: "This should be the same folder used for saving checkpoints, NOT the onnx folder."
getvar: "Select variance checkpoint folder"
dur: "Duration"
pit: "Pitch"
ousave: "Select save location"
ousave2: "Select where the final singer folder will be saved.\nIt is recommended to save directly into your OpenUTAU/singers folder."
vocoder: "OPTIONAL: Custom vocoder"
vocoder_adv: "Vocoder ONNX"
vocoder2: "If the model has a non-default vocoder, select the ONNX file here."
ouexport: "Prepare for OpenUtau"

#Quick Inference
##strings 'getaco' and 'getvar' are reused
getds: "Select .ds file"
varckpt: "Variance ckpt folder"
acockpt: "Acoustic ckpt folder"
spk: "enter speaker name"
render: "Render audio"
replay: "Replay rendered audio"


#test
testingline: "testtesttest"